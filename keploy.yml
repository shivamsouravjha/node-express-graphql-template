path: ''
command: ''
port: 0
proxyPort: 16789
dnsPort: 26789
debug: false
disableANSI: false
disableTele: false
inDocker: false
generateGithubActions: true
containerName: ''
networkName: ''
buildDelay: 30
test:
  selectedTests: {}
  globalNoise:
    global:
      body:
        data.signIn.token: []
        data.signUp.token: []
      header:
        Etag: []
        Vary: []
    test-sets: {}
  delay: 5
  apiTimeout: 30
  coverage: false
  goCoverage: false
  coverageReportPath: ''
  ignoreOrdering: true
  mongoPassword: default@123
  language: ''
  removeUnusedMocks: false
  dedup: false
  freezeTime: true
record:
  recordTimer: 0s
  filters: []
configPath: ''
bypassRules: []
cmdType: native
enableTesting: false
fallbackOnMiss: false
keployContainer: keploy-v2
keployNetwork: keploy-network

# Example on using tests
#tests:
#  filters:
#   - path: "/user/app"
#     urlMethods: ["GET"]
#     headers: {
#       "^asdf*": "^test"
#     }
#     host: "dc.services.visualstudio.com"
#Example on using stubs
#stubs:
#  filters:
#   - path: "/user/app"
#     port: 8080
#   - port: 8081
#   - host: "dc.services.visualstudio.com"
#   - port: 8081
#     host: "dc.services.visualstudio.com"
#     path: "/user/app"
	#
#Example on using globalNoise
#globalNoise:
#   global:
#     body: {
#        # to ignore some values for a field,
#        # pass regex patterns to the corresponding array value
#        "url": ["https?://\S+", "http://\S+"],
#     }
#     header: {
#        # to ignore the entire field, pass an empty array
#        "Date": [],
#      }
#    # to ignore fields or the corresponding values for a specific test-set,
#    # pass the test-set-name as a key to the "test-sets" object and
#    # populate the corresponding "body" and "header" objects
#    test-sets:
#      test-set-1:
#        body: {
#          # ignore all the values for the "url" field
#          "url": []
#        }
#        header: {
#          # we can also pass the exact value to ignore for a field
#          "User-Agent": ["PostmanRuntime/7.34.0"]
#        }
